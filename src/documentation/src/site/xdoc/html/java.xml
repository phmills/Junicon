<?xml version="1.0" encoding="UTF-8"?>

<!-- =========================================================================
  Copyright (c) 2011 Orielle, LLC.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimer. 
    2. Redistributions in binary form must reproduce the above copyright notice,
       this list of conditions and the following disclaimer in the documentation
       and/or other materials provided with the distribution. 

  This software is provided by the copyright holders and contributors "as is"
  and any express or implied warranties, including, but not limited to, the
  implied warranties of merchantability and fitness for a particular purpose
  are disclaimed. In no event shall the copyright holder or contributors be
  liable for any direct, indirect, incidental, special, exemplary, or
  consequential damages (including, but not limited to, procurement of
  substitute goods or services; loss of use, data, or profits; or business
  interruption) however caused and on any theory of liability, whether in
  contract, strict liability, or tort (including negligence or otherwise)
  arising in any way out of the use of this software, even if advised of the
  possibility of such damage.
========================================================================== -->

<!-- ===================================================================== -->
<!-- Author: Peter Mills                                                   -->
<!-- ===================================================================== -->

<document
  xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
	<title>Using Java from Junicon</title>
    </properties>
    <meta name="keyword" content="interpreter, java"/>
    <body>
      <section name="Using Java from Junicon">

	<p>
	A key feature of Junicon is its seamless integration with Java,
	which allows Unicon values and class fields to be passed to and
	from Java methods, and vice-versa.
	Junicon maps, lists, and sets are just
	their equivalent Java types, so any Java methods can be used on them.
	When run interactively, Java methods can be used transparently.
	When compiling to Java, however, casts may be needed, and Java method
	invocation must be indicated using "::"
	to distinguish it from the lambda expression invocation used by Junicon
	methods.
	Java code can also be injected into Junicon
	using @&lt;script&gt; scoped annotations.
	</p>

	<p>
	An example follows 
	that shows how to use Java methods, as well as how to
	inject Java code directly into a Unicon program.
	</p>

<source>
class E {
  local x,y;
  method foo() {
	x := [1,2,3];
	((List) x)::add(4);
	System.out::println(x);
	@&lt;script lang="java"&gt;
		y="hello"; System.out.println(y); 
	@&lt;/script&gt;
  }
};
z := E();
z.foo();
</source>

      </section>
    </body>
</document>
